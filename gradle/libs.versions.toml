# Using a version catalog allows us to centralize dependency management.
# This makes it easier to update dependency versions in one place, ensuring consistency across the project.
# It also improves readability and maintainability of our build scripts.

[versions]
coreTesting = "2.2.0"
mockitoKotlin = "4.0.0"
turbine = "1.0.0"
versionCode = "1"
versionName = "1.0.0"
androidGradlePlugin = "7.4.2"
kotlin = "1.9.22"
appcompat = "1.6.1"
constraintlayout = "2.1.4"
converterGson = "2.9.0"
coreKtx = "1.13.1"
dagger = "2.48.1"
datastorePreferences = "1.1.1"
fragmentKtx = "1.7.1"
gson = "2.10.1"
hiltAndroid = "2.48.1"
kotlinxCoroutinesCore = "1.7.3"
lifecycleRuntimeKtx = "2.7.0"
logginginterceptor = "3.1.0"
loggingInterceptorVersion = "4.9.2"
material = "1.12.0"
moshiKotlin = "1.14.0"
retrofit = "2.9.0"
retrofit2KotlinCoroutinesAdapter = "0.9.2"
sdpAndroid = "1.1.0"
sspAndroid = "1.1.0"
swiperefreshlayout = "1.1.0"
mockito = "4.3.1"
junit = "4.13.2"
toasty = "1.5.2"

[libraries]
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swiperefreshlayout" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }
converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "converterGson" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
hilt-android-gradle-plugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "dagger" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltAndroid" }
kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesCore" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptorVersion" }
logginginterceptor = { module = "com.github.ihsanbal:LoggingInterceptor", version.ref = "logginginterceptor" }
material = { module = "com.google.android.material:material", version.ref = "material" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshiKotlin" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit2-kotlin-coroutines-adapter = { module = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter", version.ref = "retrofit2KotlinCoroutinesAdapter" }
sdp-android = { module = "com.intuit.sdp:sdp-android", version.ref = "sdpAndroid" }
ssp-android = { module = "com.intuit.ssp:ssp-android", version.ref = "sspAndroid" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesCore" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
junit = { module = "junit:junit", version.ref = "junit" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
toasty = { module = "com.github.GrenderG:Toasty", version.ref = "toasty" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "androidGradlePlugin" }
androidLibrary = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinJVM = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hiltAndroid" }